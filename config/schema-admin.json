{
  "settings": {
    "servers": [
      {
        "url": "{{HYDRA_ADMIN_SERVER_URL:-http://localhost:4445}}"
      }
    ],
    "timeout": "{{HYDRA_ADMIN_TIMEOUT}}",
    "retry": {
      "times": "{{HYDRA_ADMIN_RETRY_TIMES}}",
      "delay": "{{HYDRA_ADMIN_RETRY_DELAY}}",
      "httpStatus": "{{HYDRA_ADMIN_RETRY_HTTP_STATUS}}"
    },
    "version": "latest"
  },
  "collections": [],
  "functions": [
    {
      "request": {
        "url": "/clients",
        "method": "get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "Int64",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "Int64",
              "nullable": true
            }
          },
          {
            "name": "client_name",
            "in": "query",
            "schema": {
              "type": "String",
              "nullable": true
            }
          },
          {
            "name": "owner",
            "in": "query",
            "schema": {
              "type": "String",
              "nullable": true
            }
          }
        ]
      },
      "arguments": {
        "client_name": {
          "description": "The name of the clients to filter by.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "limit": {
          "description": "The maximum amount of clients to returned, upper bound is 500 clients.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "offset": {
          "description": "The offset from where to start looking.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "owner": {
          "description": "The owner of the clients to filter by.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      },
      "description": "List OAuth 2.0 Clients",
      "name": "listOAuth2Clients",
      "result_type": {
        "element_type": {
          "name": "OAuth2Client",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "request": {
        "url": "/clients/{id}",
        "method": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get an OAuth 2.0 Client",
      "name": "getOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/health/alive",
        "method": "get"
      },
      "arguments": {},
      "description": "Check Alive Status",
      "name": "isInstanceAlive",
      "result_type": {
        "name": "HealthStatus",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/keys/{set}",
        "method": "get",
        "parameters": [
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Retrieve a JSON Web Key Set",
      "name": "getJsonWebKeySet",
      "result_type": {
        "name": "JSONWebKeySet",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/keys/{set}/{kid}",
        "method": "get",
        "parameters": [
          {
            "name": "kid",
            "in": "path",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "kid": {
          "description": "The kid of the desired key",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Fetch a JSON Web Key",
      "name": "getJsonWebKey",
      "result_type": {
        "name": "JSONWebKeySet",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/consent",
        "method": "get",
        "parameters": [
          {
            "name": "consent_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "consent_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get Consent Request Information",
      "name": "getConsentRequest",
      "result_type": {
        "name": "ConsentRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/login",
        "method": "get",
        "parameters": [
          {
            "name": "login_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "login_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get a Login Request",
      "name": "getLoginRequest",
      "result_type": {
        "name": "LoginRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/logout",
        "method": "get",
        "parameters": [
          {
            "name": "logout_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "logout_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get a Logout Request",
      "name": "getLogoutRequest",
      "result_type": {
        "name": "LogoutRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/sessions/consent",
        "method": "get",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "Int64",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "Int64",
              "nullable": true
            }
          }
        ]
      },
      "arguments": {
        "limit": {
          "description": "The maximum amount of consent sessions to be returned, upper bound is 500 sessions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "offset": {
          "description": "The offset from where to start looking.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "subject": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Lists All Consent Sessions of a Subject",
      "name": "listSubjectConsentSessions",
      "result_type": {
        "element_type": {
          "name": "PreviousConsentSession",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "request": {
        "url": "/trust/grants/jwt-bearer/issuers",
        "method": "get",
        "parameters": [
          {
            "name": "issuer",
            "in": "query",
            "schema": {
              "type": "String",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "Int64",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "Int64",
              "nullable": true
            }
          }
        ]
      },
      "arguments": {
        "issuer": {
          "description": "If optional \"issuer\" is supplied, only jwt-bearer grants with this issuer will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "limit": {
          "description": "The maximum amount of policies returned, upper bound is 500 policies",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "offset": {
          "description": "The offset from where to start looking.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        }
      },
      "description": "List Trusted OAuth2 JWT Bearer Grant Type Issuers",
      "name": "listTrustedJwtGrantIssuers",
      "result_type": {
        "element_type": {
          "name": "TrustedJwtGrantIssuer",
          "type": "named"
        },
        "type": "array"
      }
    },
    {
      "request": {
        "url": "/trust/grants/jwt-bearer/issuers/{id}",
        "method": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "id": {
          "description": "The id of the desired grant",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get a Trusted OAuth2 JWT Bearer Grant Type Issuer",
      "name": "getTrustedJwtGrantIssuer",
      "result_type": {
        "name": "TrustedJwtGrantIssuer",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/version",
        "method": "get"
      },
      "arguments": {},
      "description": "Get Service Version",
      "name": "getVersion",
      "result_type": {
        "name": "Version",
        "type": "named"
      }
    }
  ],
  "object_types": {
    "AcceptConsentRequest": {
      "fields": {
        "grant_access_token_audience": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "grant_scope": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "handled_at": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "remember": {
          "description": "Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same\nclient asks the same user for the same, or a subset of, scope.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "remember_for": {
          "description": "RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the\nauthorization will be remembered indefinitely.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "session": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConsentRequestSession",
              "type": "named"
            }
          }
        }
      }
    },
    "AcceptLoginRequest": {
      "fields": {
        "acr": {
          "description": "ACR sets the Authentication AuthorizationContext Class Reference value for this authentication session. You can use it\nto express that, for example, a user authenticated using two factor authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "amr": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "context": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSONRawMessage",
              "type": "named"
            }
          }
        },
        "force_subject_identifier": {
          "description": "ForceSubjectIdentifier forces the \"pairwise\" user ID of the end-user that authenticated. The \"pairwise\" user ID refers to the\n(Pairwise Identifier Algorithm)[http://openid.net/specs/openid-connect-core-1_0.html#PairwiseAlg] of the OpenID\nConnect specification. It allows you to set an obfuscated subject (\"user\") identifier that is unique to the client.\n\nPlease note that this changes the user ID on endpoint /userinfo and sub claim of the ID Token. It does not change the\nsub claim in the OAuth 2.0 Introspection.\n\nPer default, ORY Hydra handles this value with its own algorithm. In case you want to set this yourself\nyou can use this field. Please note that setting this field has no effect if `pairwise` is not configured in\nORY Hydra or the OAuth 2.0 Client does not expect a pairwise identifier (set via `subject_type` key in the client's\nconfiguration).\n\nPlease also be aware that ORY Hydra is unable to properly compute this value during authentication. This implies\nthat you have to compute this value on every authentication process (probably depending on the client ID or some\nother unique value).\n\nIf you fail to compute the proper value, then authentication processes which have id_token_hint set might fail.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "remember": {
          "description": "Remember, if set to true, tells ORY Hydra to remember this user by telling the user agent (browser) to store\na cookie with authentication data. If the same user performs another OAuth 2.0 Authorization Request, he/she\nwill not be asked to log in again.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "remember_for": {
          "description": "RememberFor sets how long the authentication should be remembered for in seconds. If set to `0`, the\nauthorization will be remembered for the duration of the browser session (using a session cookie).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "subject": {
          "description": "Subject is the user ID of the end-user that authenticated.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "CompletedRequest": {
      "fields": {
        "redirect_to": {
          "description": "RedirectURL is the URL which you should redirect the user to once the authentication process is completed.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "ConsentRequest": {
      "fields": {
        "acr": {
          "description": "ACR represents the Authentication AuthorizationContext Class Reference value for this authentication session. You can use it\nto express that, for example, a user authenticated using two factor authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "amr": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "challenge": {
          "description": "ID is the identifier (\"authorization challenge\") of the consent authorization request. It is used to\nidentify the session.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "client": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2Client",
              "type": "named"
            }
          }
        },
        "context": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSONRawMessage",
              "type": "named"
            }
          }
        },
        "login_challenge": {
          "description": "LoginChallenge is the login challenge this consent challenge belongs to. It can be used to associate\na login and consent request in the login \u0026 consent app.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "login_session_id": {
          "description": "LoginSessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag)\nthis ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false)\nthis will be a new random value. This value is used as the \"sid\" parameter in the ID Token and in OIDC Front-/Back-\nchannel logout. It's value can generally be used to associate consecutive login requests by a certain user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "oidc_context": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OpenIDConnectContext",
              "type": "named"
            }
          }
        },
        "request_url": {
          "description": "RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which\ninitiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but\nmight come in handy if you want to deal with additional request parameters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "requested_access_token_audience": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "requested_scope": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "skip": {
          "description": "Skip, if true, implies that the client has requested the same scopes from the same user previously.\nIf true, you must not ask the user to grant the requested scopes. You must however either allow or deny the\nconsent request using the usual API call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "subject": {
          "description": "Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope\nrequested by the OAuth 2.0 client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "ConsentRequestSession": {
      "fields": {
        "access_token": {
          "description": "AccessToken sets session data for the access and refresh token, as well as any future tokens issued by the\nrefresh grant. Keep in mind that this data will be available to anyone performing OAuth 2.0 Challenge Introspection.\nIf only your services can perform OAuth 2.0 Challenge Introspection, this is usually fine. But if third parties\ncan access that endpoint as well, sensitive data from the session might be exposed to them. Use with care!",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "id_token": {
          "description": "IDToken sets session data for the OpenID Connect ID token. Keep in mind that the session'id payloads are readable\nby anyone that has access to the ID Challenge. Use with care!",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        }
      }
    },
    "FlushInactiveOAuth2TokensRequest": {
      "fields": {
        "notAfter": {
          "description": "NotAfter sets after which point tokens should not be flushed. This is useful when you want to keep a history\nof recently issued tokens for auditing.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        }
      }
    },
    "HealthStatus": {
      "fields": {
        "status": {
          "description": "Status always contains \"ok\".",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "IntrospectOAuth2TokenBody": {
      "fields": {
        "scope": {
          "description": "An optional, space separated list of required scopes. If the access token was not granted one of the\nscopes, the result of active will be false.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "token": {
          "description": "The string value of the token. For access tokens, this\nis the \"access_token\" value returned from the token endpoint\ndefined in OAuth 2.0. For refresh tokens, this is the \"refresh_token\"\nvalue returned.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "JSONWebKey": {
      "description": "It is important that this model object is named JSONWebKey for\n\"swagger generate spec\" to generate only on definition of a\nJSONWebKey.",
      "fields": {
        "alg": {
          "description": "The \"alg\" (algorithm) parameter identifies the algorithm intended for\nuse with the key.  The values used should either be registered in the\nIANA \"JSON Web Signature and Encryption Algorithms\" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.",
          "type": {
            "name": "JsonWebKeyAlgorithm",
            "type": "named"
          }
        },
        "crv": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "d": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "dp": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "dq": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "e": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "k": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "kid": {
          "description": "The \"kid\" (key ID) parameter is used to match a specific key.  This\nis used, for instance, to choose among a set of keys within a JWK Set\nduring key rollover.  The structure of the \"kid\" value is\nunspecified.  When \"kid\" values are used within a JWK Set, different\nkeys within the JWK Set SHOULD use distinct \"kid\" values.  (One\nexample in which different keys might use the same \"kid\" value is if\nthey have different \"kty\" (key type) values but are considered to be\nequivalent alternatives by the application using them.)  The \"kid\"\nvalue is a case-sensitive string.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "kty": {
          "description": "The \"kty\" (key type) parameter identifies the cryptographic algorithm\nfamily used with the key, such as \"RSA\" or \"EC\". \"kty\" values should\neither be registered in the IANA \"JSON Web Key Types\" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.  The \"kty\" value is a case-sensitive string.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "n": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "p": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "q": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "qi": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "use": {
          "description": "Use (\"public key use\") identifies the intended use of\nthe public key. The \"use\" parameter is employed to indicate whether\na public key is used for encrypting data or verifying the signature\non data. Values are commonly \"sig\" (signature) or \"enc\" (encryption).",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "x": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "x5c": {
          "description": "The \"x5c\" (X.509 certificate chain) parameter contains a chain of one\nor more PKIX certificates [RFC5280].  The certificate chain is\nrepresented as a JSON array of certificate value strings.  Each\nstring in the array is a base64-encoded (Section 4 of [RFC4648] --\nnot base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.\nThe PKIX certificate containing the key value MUST be the first\ncertificate.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "y": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "JSONWebKeySet": {
      "description": "It is important that this model object is named JSONWebKeySet for\n\"swagger generate spec\" to generate only on definition of a\nJSONWebKeySet. Since one with the same name is previously defined as\nclient.Client.JSONWebKeys and this one is last, this one will be\neffectively written in the swagger spec.",
      "fields": {
        "keys": {
          "description": "The value of the \"keys\" parameter is an array of JWK values.  By\ndefault, the order of the JWK values within the array does not imply\nan order of preference among them, although applications of JWK Sets\ncan choose to assign a meaning to the order for their purposes, if\ndesired.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSONWebKey",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "JsonWebKeySetGeneratorRequest": {
      "fields": {
        "alg": {
          "description": "The algorithm to be used for creating the key. Supports \"RS256\", \"ES256\", \"ES512\", \"HS512\", and \"HS256\"",
          "type": {
            "name": "JsonWebKeyAlgorithm",
            "type": "named"
          }
        },
        "kid": {
          "description": "The kid of the key to be created",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "use": {
          "description": "The \"use\" (public key use) parameter identifies the intended use of\nthe public key. The \"use\" parameter is employed to indicate whether\na public key is used for encrypting data or verifying the signature\non data. Valid values are \"enc\" and \"sig\".",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "LoginRequest": {
      "fields": {
        "challenge": {
          "description": "ID is the identifier (\"login challenge\") of the login request. It is used to\nidentify the session.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "client": {
          "type": {
            "name": "OAuth2Client",
            "type": "named"
          }
        },
        "oidc_context": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OpenIDConnectContext",
              "type": "named"
            }
          }
        },
        "request_url": {
          "description": "RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which\ninitiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but\nmight come in handy if you want to deal with additional request parameters.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "requested_access_token_audience": {
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          }
        },
        "requested_scope": {
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          }
        },
        "session_id": {
          "description": "SessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag)\nthis ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false)\nthis will be a new random value. This value is used as the \"sid\" parameter in the ID Token and in OIDC Front-/Back-\nchannel logout. It's value can generally be used to associate consecutive login requests by a certain user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "skip": {
          "description": "Skip, if true, implies that the client has requested the same scopes from the same user previously.\nIf true, you can skip asking the user to grant the requested scopes, and simply forward the user to the redirect URL.\n\nThis feature allows you to update / set session information.",
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "subject": {
          "description": "Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope\nrequested by the OAuth 2.0 client. If this value is set and `skip` is true, you MUST include this subject type\nwhen accepting the login request, or the request will fail.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "LogoutRequest": {
      "fields": {
        "challenge": {
          "description": "Challenge is the identifier (\"logout challenge\") of the logout authentication request. It is used to\nidentify the session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2Client",
              "type": "named"
            }
          }
        },
        "request_url": {
          "description": "RequestURL is the original Logout URL requested.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "rp_initiated": {
          "description": "RPInitiated is set to true if the request was initiated by a Relying Party (RP), also known as an OAuth 2.0 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "sid": {
          "description": "SessionID is the login session ID that was requested to log out.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "subject": {
          "description": "Subject is the user for whom the logout was request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "OAuth2Client": {
      "fields": {
        "allowed_cors_origins": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "audience": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "authorization_code_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "authorization_code_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "authorization_code_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "backchannel_logout_session_required": {
          "description": "Boolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout\nToken to identify the RP session with the OP when the backchannel_logout_uri is used.\nIf omitted, the default value is false.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "backchannel_logout_uri": {
          "description": "RP URL that will cause the RP to log itself out when sent a Logout Token by the OP.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_credentials_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_id": {
          "description": "ID  is the id for this client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_name": {
          "description": "Name is the human-readable string name of the client to be presented to the\nend-user during authorization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_secret": {
          "description": "Secret is the client's secret. The secret will be included in the create request as cleartext, and then\nnever again. The secret is stored using BCrypt so it is impossible to recover it. Tell your users\nthat they need to write the secret down as it will not be made available again.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_secret_expires_at": {
          "description": "SecretExpiresAt is an integer holding the time at which the client\nsecret will expire or 0 if it will not expire. The time is\nrepresented as the number of seconds from 1970-01-01T00:00:00Z as\nmeasured in UTC until the date/time of expiration.\n\nThis feature is currently not supported and it's value will always\nbe set to 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "client_uri": {
          "description": "ClientURI is an URL string of a web page providing information about the client.\nIf present, the server SHOULD display this URL to the end-user in\na clickable fashion.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "contacts": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "created_at": {
          "description": "CreatedAt returns the timestamp of the client's creation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "frontchannel_logout_session_required": {
          "description": "Boolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be\nincluded to identify the RP session with the OP when the frontchannel_logout_uri is used.\nIf omitted, the default value is false.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "frontchannel_logout_uri": {
          "description": "RP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query\nparameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the\nrequest and to determine which of the potentially multiple sessions is to be logged out; if either is\nincluded, both MUST be.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "grant_types": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2GrantType",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "implicit_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "implicit_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "jwks": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JoseJSONWebKeySet",
              "type": "named"
            }
          }
        },
        "jwks_uri": {
          "description": "URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains\nthe signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the\nClient's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing\nand encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced\nJWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both\nsignatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used\nto provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST\nmatch those in the certificate.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "jwt_bearer_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "logo_uri": {
          "description": "LogoURI is an URL string that references a logo for the client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSONRawMessage",
              "type": "named"
            }
          }
        },
        "owner": {
          "description": "Owner is a string identifying the owner of the OAuth 2.0 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "policy_uri": {
          "description": "PolicyURI is a URL string that points to a human-readable privacy policy document\nthat describes how the deployment organization collects, uses,\nretains, and discloses personal data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "post_logout_redirect_uris": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "redirect_uris": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "refresh_token_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "registration_access_token": {
          "description": "RegistrationAccessToken can be used to update, get, or delete the OAuth2 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "registration_client_uri": {
          "description": "RegistrationClientURI is the URL used to update, get, or delete the OAuth2 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "request_object_signing_alg": {
          "description": "JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects\nfrom this Client MUST be rejected, if not signed with this algorithm.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            }
          }
        },
        "request_uris": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "response_types": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2ResponseType",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "scope": {
          "description": "Scope is a string containing a space-separated list of scope values (as\ndescribed in Section 3.3 of OAuth 2.0 [RFC6749]) that the client\ncan use when requesting access tokens.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2Scope",
              "type": "named"
            }
          }
        },
        "sector_identifier_uri": {
          "description": "URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a\nfile with a single JSON array of redirect_uri values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "subject_type": {
          "description": "SubjectType requested for responses to this Client. The subject_types_supported Discovery parameter contains a\nlist of the supported subject_type values for this server. Valid types include `pairwise` and `public`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OpenIDConnectSubjectType",
              "type": "named"
            }
          }
        },
        "token_endpoint_auth_method": {
          "description": "Requested Client Authentication method for the Token Endpoint. The options are client_secret_post,\nclient_secret_basic, private_key_jwt, and none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TokenEndpointAuthMethod",
              "type": "named"
            }
          }
        },
        "token_endpoint_auth_signing_alg": {
          "description": "Requested Client Authentication signing algorithm for the Token Endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            }
          }
        },
        "tos_uri": {
          "description": "TermsOfServiceURI is a URL string that points to a human-readable terms of service\ndocument for the client that describes a contractual relationship\nbetween the end-user and the client that the end-user accepts when\nauthorizing the client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "updated_at": {
          "description": "UpdatedAt returns the timestamp of the last update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "userinfo_signed_response_alg": {
          "description": "JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT\n[JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims\nas a UTF-8 encoded JSON object using the application/json content-type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            }
          }
        }
      }
    },
    "OAuth2TokenIntrospection": {
      "description": "https://tools.ietf.org/html/rfc7662",
      "fields": {
        "active": {
          "description": "Active is a boolean indicator of whether or not the presented token\nis currently active.  The specifics of a token's \"active\" state\nwill vary depending on the implementation of the authorization\nserver and the information it keeps about its tokens, but a \"true\"\nvalue return for the \"active\" property will generally indicate\nthat a given token has been issued by this authorization server,\nhas not been revoked by the resource owner, and is within its\ngiven time window of validity (e.g., after its issuance time and\nbefore its expiration time).",
          "type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "aud": {
          "description": "Audience contains a list of the token's intended audiences.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "client_id": {
          "description": "ID is aclient identifier for the OAuth 2.0 client that\nrequested this token.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "exp": {
          "description": "Expires at is an integer timestamp, measured in the number of seconds\nsince January 1 1970 UTC, indicating when this token will expire.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "ext": {
          "description": "Extra is arbitrary data set by the session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "iat": {
          "description": "Issued at is an integer timestamp, measured in the number of seconds\nsince January 1 1970 UTC, indicating when this token was\noriginally issued.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "iss": {
          "description": "IssuerURL is a string representing the issuer of this token",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "nbf": {
          "description": "NotBefore is an integer timestamp, measured in the number of seconds\nsince January 1 1970 UTC, indicating when this token is not to be\nused before.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "obfuscated_subject": {
          "description": "ObfuscatedSubject is set when the subject identifier algorithm was set to \"pairwise\" during authorization.\nIt is the `sub` value of the ID Token that was issued.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "scope": {
          "description": "Scope is a JSON string containing a space-separated list of\nscopes associated with this token.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "sub": {
          "description": "Subject of the token, as defined in JWT [RFC7519].\nUsually a machine-readable identifier of the resource owner who\nauthorized this token.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "token_type": {
          "description": "TokenType is the introspected token's type, typically `Bearer`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "token_use": {
          "description": "TokenUse is the introspected token's use, for example `access_token` or `refresh_token`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "username": {
          "description": "Username is a human-readable identifier for the resource owner who\nauthorized this token.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "OpenIDConnectContext": {
      "fields": {
        "acr_values": {
          "description": "ACRValues is the Authentication AuthorizationContext Class Reference requested in the OAuth 2.0 Authorization request.\nIt is a parameter defined by OpenID Connect and expresses which level of authentication (e.g. 2FA) is required.\n\nOpenID Connect defines it as follows:\n\u003e Requested Authentication AuthorizationContext Class Reference values. Space-separated string that specifies the acr values\nthat the Authorization Server is being requested to use for processing this Authentication Request, with the\nvalues appearing in order of preference. The Authentication AuthorizationContext Class satisfied by the authentication\nperformed is returned as the acr Claim Value, as specified in Section 2. The acr Claim is requested as a\nVoluntary Claim by this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "display": {
          "description": "Display is a string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User.\nThe defined values are:\npage: The Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.\npopup: The Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.\ntouch: The Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.\nwap: The Authorization Server SHOULD display the authentication and consent UI consistent with a \"feature phone\" type display.\n\nThe Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "id_token_hint_claims": {
          "description": "IDTokenHintClaims are the claims of the ID Token previously issued by the Authorization Server being passed as a hint about the\nEnd-User's current or past authenticated session with the Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          }
        },
        "login_hint": {
          "description": "LoginHint hints about the login identifier the End-User might use to log in (if necessary).\nThis hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier)\nand then wants to pass that value as a hint to the discovered authorization service. This value MAY also be a\nphone number in the format specified for the phone_number Claim. The use of this parameter is optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "ui_locales": {
          "description": "UILocales is the End-User'id preferred languages and scripts for the user interface, represented as a\nspace-separated list of BCP47 [RFC5646] language tag values, ordered by preference. For instance, the value\n\"fr-CA fr en\" represents a preference for French as spoken in Canada, then French (without a region designation),\nfollowed by English (without a region designation). An error SHOULD NOT result if some or all of the requested\nlocales are not supported by the OpenID Provider.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "PatchDocument": {
      "description": "A JSONPatch document as defined by RFC 6902",
      "fields": {
        "from": {
          "description": "A JSON-pointer",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "op": {
          "description": "The operation to be performed",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "path": {
          "description": "A JSON-pointer",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "value": {
          "description": "The value to be used within the operations",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PatchDocumentValue",
              "type": "named"
            }
          }
        }
      }
    },
    "PreviousConsentSession": {
      "description": "The response used to return used consent requests\nsame as HandledLoginRequest, just with consent_request exposed as json",
      "fields": {
        "consent_request": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConsentRequest",
              "type": "named"
            }
          }
        },
        "grant_access_token_audience": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "grant_scope": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "handled_at": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "remember": {
          "description": "Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same\nclient asks the same user for the same, or a subset of, scope.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "remember_for": {
          "description": "RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the\nauthorization will be remembered indefinitely.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "session": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConsentRequestSession",
              "type": "named"
            }
          }
        }
      }
    },
    "RejectRequest": {
      "fields": {
        "error": {
          "description": "The error should follow the OAuth2 error format (e.g. `invalid_request`, `login_required`).\n\nDefaults to `request_denied`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "error_debug": {
          "description": "Debug contains information to help resolve the problem as a developer. Usually not exposed\nto the public but only in the server logs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "error_description": {
          "description": "Description of the error in a human readable format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "error_hint": {
          "description": "Hint to help resolve the error.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "status_code": {
          "description": "Represents the HTTP status code of the error (e.g. 401 or 403)\n\nDefaults to 400",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        }
      }
    },
    "TrustJwtGrantIssuerBody": {
      "fields": {
        "allow_any_subject": {
          "description": "The \"allow_any_subject\" indicates that the issuer is allowed to have any principal as the subject of the JWT.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "expires_at": {
          "description": "The \"expires_at\" indicates, when grant will expire, so we will reject assertion from \"issuer\" targeting \"subject\".",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          }
        },
        "issuer": {
          "description": "The \"issuer\" identifies the principal that issued the JWT assertion (same as \"iss\" claim in JWT).",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "jwk": {
          "type": {
            "name": "JSONWebKey",
            "type": "named"
          }
        },
        "scope": {
          "description": "The \"scope\" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          }
        },
        "subject": {
          "description": "The \"subject\" identifies the principal that is the subject of the JWT.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "TrustedJsonWebKey": {
      "fields": {
        "kid": {
          "description": "The \"key_id\" is key unique identifier (same as kid header in jws/jwt).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "set": {
          "description": "The \"set\" is basically a name for a group(set) of keys. Will be the same as \"issuer\" in grant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "TrustedJwtGrantIssuer": {
      "fields": {
        "allow_any_subject": {
          "description": "The \"allow_any_subject\" indicates that the issuer is allowed to have any principal as the subject of the JWT.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "created_at": {
          "description": "The \"created_at\" indicates, when grant was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "expires_at": {
          "description": "The \"expires_at\" indicates, when grant will expire, so we will reject assertion from \"issuer\" targeting \"subject\".",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "issuer": {
          "description": "The \"issuer\" identifies the principal that issued the JWT assertion (same as \"iss\" claim in JWT).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "public_key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TrustedJsonWebKey",
              "type": "named"
            }
          }
        },
        "scope": {
          "description": "The \"scope\" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "subject": {
          "description": "The \"subject\" identifies the principal that is the subject of the JWT.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "UpdateOAuth2ClientLifespans": {
      "description": "The OIDC Hybrid grant type inherits token lifespan configuration from the implicit grant.",
      "fields": {
        "authorization_code_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "authorization_code_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "authorization_code_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_credentials_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "implicit_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "implicit_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "jwt_bearer_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "Version": {
      "fields": {
        "version": {
          "description": "Version is the service's version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    }
  },
  "procedures": [
    {
      "request": {
        "url": "/clients",
        "method": "post",
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "OAuth2Client"
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "name": "OAuth2Client",
            "type": "named"
          }
        }
      },
      "description": "Create an OAuth 2.0 Client",
      "name": "createOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/clients/{id}",
        "method": "put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "OAuth2Client"
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "name": "OAuth2Client",
            "type": "named"
          }
        },
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Update an OAuth 2.0 Client",
      "name": "updateOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/clients/{id}",
        "method": "patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "array"
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "element_type": {
              "name": "PatchDocument",
              "type": "named"
            },
            "type": "array"
          }
        },
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Patch an OAuth 2.0 Client",
      "name": "patchOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/clients/{id}",
        "method": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Deletes an OAuth 2.0 Client",
      "name": "deleteOAuth2Client",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/clients/{id}/lifespans",
        "method": "put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "UpdateOAuth2ClientLifespans",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateOAuth2ClientLifespans",
              "type": "named"
            }
          }
        },
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "name": "UpdateOAuth2ClientLifespans",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/keys/{set}",
        "method": "post",
        "parameters": [
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "JsonWebKeySetGeneratorRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JsonWebKeySetGeneratorRequest",
              "type": "named"
            }
          }
        },
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Generate a New JSON Web Key",
      "name": "createJsonWebKeySet",
      "result_type": {
        "name": "JSONWebKeySet",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/keys/{set}",
        "method": "put",
        "parameters": [
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "JSONWebKeySet",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSONWebKeySet",
              "type": "named"
            }
          }
        },
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Update a JSON Web Key Set",
      "name": "updateJsonWebKeySet",
      "result_type": {
        "name": "JSONWebKeySet",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/keys/{set}",
        "method": "delete",
        "parameters": [
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Delete a JSON Web Key Set",
      "name": "deleteJsonWebKeySet",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/keys/{set}/{kid}",
        "method": "put",
        "parameters": [
          {
            "name": "kid",
            "in": "path",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "JSONWebKey",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSONWebKey",
              "type": "named"
            }
          }
        },
        "kid": {
          "description": "The kid of the desired key",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Update a JSON Web Key",
      "name": "updateJsonWebKey",
      "result_type": {
        "name": "JSONWebKey",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/keys/{set}/{kid}",
        "method": "delete",
        "parameters": [
          {
            "name": "kid",
            "in": "path",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "set",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "kid": {
          "description": "The kid of the desired key",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "set": {
          "description": "The set",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Delete a JSON Web Key",
      "name": "deleteJsonWebKey",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/consent/accept",
        "method": "put",
        "parameters": [
          {
            "name": "consent_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "AcceptConsentRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AcceptConsentRequest",
              "type": "named"
            }
          }
        },
        "consent_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Accept a Consent Request",
      "name": "acceptConsentRequest",
      "result_type": {
        "name": "CompletedRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/consent/reject",
        "method": "put",
        "parameters": [
          {
            "name": "consent_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "RejectRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RejectRequest",
              "type": "named"
            }
          }
        },
        "consent_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Reject a Consent Request",
      "name": "rejectConsentRequest",
      "result_type": {
        "name": "CompletedRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/login/accept",
        "method": "put",
        "parameters": [
          {
            "name": "login_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "AcceptLoginRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AcceptLoginRequest",
              "type": "named"
            }
          }
        },
        "login_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Accept a Login Request",
      "name": "acceptLoginRequest",
      "result_type": {
        "name": "CompletedRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/login/reject",
        "method": "put",
        "parameters": [
          {
            "name": "login_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "RejectRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RejectRequest",
              "type": "named"
            }
          }
        },
        "login_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Reject a Login Request",
      "name": "rejectLoginRequest",
      "result_type": {
        "name": "CompletedRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/logout/accept",
        "method": "put",
        "parameters": [
          {
            "name": "logout_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "logout_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Accept a Logout Request",
      "name": "acceptLogoutRequest",
      "result_type": {
        "name": "CompletedRequest",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/requests/logout/reject",
        "method": "put",
        "parameters": [
          {
            "name": "logout_challenge",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "RejectRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RejectRequest",
              "type": "named"
            }
          }
        },
        "logout_challenge": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Reject a Logout Request",
      "name": "rejectLogoutRequest",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/sessions/consent",
        "method": "delete",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "client",
            "in": "query",
            "schema": {
              "type": "String",
              "nullable": true
            }
          },
          {
            "name": "all",
            "in": "query",
            "schema": {
              "type": "Boolean",
              "nullable": true
            }
          }
        ]
      },
      "arguments": {
        "all": {
          "description": "If set to `?all=true`, deletes all consent sessions by the Subject that have been granted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "client": {
          "description": "If set, deletes only those consent sessions by the Subject that have been granted to the specified OAuth 2.0 Client ID",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "subject": {
          "description": "The subject (Subject) who's consent sessions should be deleted.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Revokes Consent Sessions of a Subject for a Specific OAuth 2.0 Client",
      "name": "revokeConsentSessions",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/auth/sessions/login",
        "method": "delete",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "subject": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Invalidates All Login Sessions of a Certain User\nInvalidates a Subject's Authentication Session",
      "name": "revokeAuthenticationSession",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/flush",
        "method": "post",
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "FlushInactiveOAuth2TokensRequest",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FlushInactiveOAuth2TokensRequest",
              "type": "named"
            }
          }
        }
      },
      "description": "Flush Expired OAuth2 Access Tokens",
      "name": "flushInactiveOAuth2Tokens",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/introspect",
        "method": "post",
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded",
          "schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "String",
                "nullable": true
              },
              "token": {
                "type": "String"
              }
            }
          }
        }
      },
      "arguments": {
        "body": {
          "description": "Form data of /oauth2/introspect",
          "type": {
            "name": "IntrospectOAuth2TokenBody",
            "type": "named"
          }
        }
      },
      "description": "Introspect OAuth2 Tokens",
      "name": "introspectOAuth2Token",
      "result_type": {
        "name": "OAuth2TokenIntrospection",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/tokens",
        "method": "delete",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "client_id": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Delete OAuth2 Access Tokens from a Client",
      "name": "deleteOAuth2Token",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/trust/grants/jwt-bearer/issuers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "TrustJwtGrantIssuerBody",
            "nullable": true
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TrustJwtGrantIssuerBody",
              "type": "named"
            }
          }
        }
      },
      "description": "Trust an OAuth2 JWT Bearer Grant Type Issuer",
      "name": "trustJwtGrantIssuer",
      "result_type": {
        "name": "TrustedJwtGrantIssuer",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/trust/grants/jwt-bearer/issuers/{id}",
        "method": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "id": {
          "description": "The id of the desired grant",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Delete a Trusted OAuth2 JWT Bearer Grant Type Issuer",
      "name": "deleteTrustedJwtGrantIssuer",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    }
  ],
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int64"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "JSONRawMessage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "JoseJSONWebKeySet": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "JsonWebKeyAlgorithm": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "RS256",
          "RS512",
          "ES256",
          "ES512",
          "EdDSA"
        ],
        "type": "enum"
      }
    },
    "OAuth2GrantType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "authorization_code",
          "implicit",
          "client_credentials",
          "refresh_token"
        ],
        "type": "enum"
      }
    },
    "OAuth2ResponseType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "code",
          "token",
          "id_token"
        ],
        "type": "enum"
      }
    },
    "OAuth2Scope": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "offline_access",
          "offline",
          "openid"
        ],
        "type": "enum"
      }
    },
    "OAuth2SigningAlgorithm": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "RS256"
        ],
        "type": "enum"
      }
    },
    "OpenIDConnectSubjectType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "public",
          "pairwise"
        ],
        "type": "enum"
      }
    },
    "PatchDocumentValue": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TokenEndpointAuthMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "client_secret_post",
          "client_secret_basic",
          "client_secret_jwt",
          "private_key_jwt",
          "none"
        ],
        "type": "enum"
      }
    }
  }
}
