{
  "settings": {
    "servers": [
      {
        "url": "{{HYDRA_PUBLIC_SERVER_URL:-http://localhost:4444}}"
      }
    ],
    "timeout": "{{HYDRA_PUBLIC_TIMEOUT}}",
    "retry": {
      "times": "{{HYDRA_PUBLIC_RETRY_TIMES}}",
      "delay": "{{HYDRA_PUBLIC_RETRY_DELAY}}",
      "httpStatus": "{{HYDRA_PUBLIC_RETRY_HTTP_STATUS}}"
    },
    "version": "latest"
  },
  "collections": [],
  "functions": [
    {
      "request": {
        "url": "/.well-known/jwks.json",
        "method": "get"
      },
      "arguments": {},
      "description": "JSON Web Keys Discovery",
      "name": "wellKnown",
      "result_type": {
        "name": "JSONWebKeySet",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/.well-known/openid-configuration",
        "method": "get"
      },
      "arguments": {},
      "description": "OpenID Connect Discovery",
      "name": "discoverOpenIDConfiguration",
      "result_type": {
        "name": "WellKnown",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/health/ready",
        "method": "get"
      },
      "arguments": {},
      "description": "Check Readiness Status",
      "name": "isInstanceReady",
      "result_type": {
        "name": "HealthStatus",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/auth",
        "method": "get"
      },
      "arguments": {},
      "description": "The OAuth 2.0 Authorize Endpoint",
      "name": "oauthAuth",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/register/{id}",
        "method": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Get an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol",
      "name": "dynamicClientRegistrationGetOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/sessions/logout",
        "method": "get"
      },
      "arguments": {},
      "description": "OpenID Connect Front-Backchannel Enabled Logout",
      "name": "disconnectUser",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    }
  ],
  "object_types": {
    "HealthStatus": {
      "fields": {
        "status": {
          "description": "Status always contains \"ok\".",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "JSONWebKey": {
      "description": "It is important that this model object is named JSONWebKey for\n\"swagger generate spec\" to generate only on definition of a\nJSONWebKey.",
      "fields": {
        "alg": {
          "description": "The \"alg\" (algorithm) parameter identifies the algorithm intended for\nuse with the key.  The values used should either be registered in the\nIANA \"JSON Web Signature and Encryption Algorithms\" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "crv": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "d": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "dp": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "dq": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "e": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "k": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "kid": {
          "description": "The \"kid\" (key ID) parameter is used to match a specific key.  This\nis used, for instance, to choose among a set of keys within a JWK Set\nduring key rollover.  The structure of the \"kid\" value is\nunspecified.  When \"kid\" values are used within a JWK Set, different\nkeys within the JWK Set SHOULD use distinct \"kid\" values.  (One\nexample in which different keys might use the same \"kid\" value is if\nthey have different \"kty\" (key type) values but are considered to be\nequivalent alternatives by the application using them.)  The \"kid\"\nvalue is a case-sensitive string.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "kty": {
          "description": "The \"kty\" (key type) parameter identifies the cryptographic algorithm\nfamily used with the key, such as \"RSA\" or \"EC\". \"kty\" values should\neither be registered in the IANA \"JSON Web Key Types\" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.  The \"kty\" value is a case-sensitive string.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "n": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "p": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "q": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "qi": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "use": {
          "description": "Use (\"public key use\") identifies the intended use of\nthe public key. The \"use\" parameter is employed to indicate whether\na public key is used for encrypting data or verifying the signature\non data. Values are commonly \"sig\" (signature) or \"enc\" (encryption).",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "x": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "x5c": {
          "description": "The \"x5c\" (X.509 certificate chain) parameter contains a chain of one\nor more PKIX certificates [RFC5280].  The certificate chain is\nrepresented as a JSON array of certificate value strings.  Each\nstring in the array is a base64-encoded (Section 4 of [RFC4648] --\nnot base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.\nThe PKIX certificate containing the key value MUST be the first\ncertificate.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "y": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "JSONWebKeySet": {
      "description": "It is important that this model object is named JSONWebKeySet for\n\"swagger generate spec\" to generate only on definition of a\nJSONWebKeySet. Since one with the same name is previously defined as\nclient.Client.JSONWebKeys and this one is last, this one will be\neffectively written in the swagger spec.",
      "fields": {
        "keys": {
          "description": "The value of the \"keys\" parameter is an array of JWK values.  By\ndefault, the order of the JWK values within the array does not imply\nan order of preference among them, although applications of JWK Sets\ncan choose to assign a meaning to the order for their purposes, if\ndesired.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSONWebKey",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "OAuth2Client": {
      "fields": {
        "allowed_cors_origins": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "audience": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "authorization_code_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "authorization_code_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "authorization_code_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "backchannel_logout_session_required": {
          "description": "Boolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout\nToken to identify the RP session with the OP when the backchannel_logout_uri is used.\nIf omitted, the default value is false.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "backchannel_logout_uri": {
          "description": "RP URL that will cause the RP to log itself out when sent a Logout Token by the OP.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_credentials_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_id": {
          "description": "ID  is the id for this client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_name": {
          "description": "Name is the human-readable string name of the client to be presented to the\nend-user during authorization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_secret": {
          "description": "Secret is the client's secret. The secret will be included in the create request as cleartext, and then\nnever again. The secret is stored using BCrypt so it is impossible to recover it. Tell your users\nthat they need to write the secret down as it will not be made available again.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_secret_expires_at": {
          "description": "SecretExpiresAt is an integer holding the time at which the client\nsecret will expire or 0 if it will not expire. The time is\nrepresented as the number of seconds from 1970-01-01T00:00:00Z as\nmeasured in UTC until the date/time of expiration.\n\nThis feature is currently not supported and it's value will always\nbe set to 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "client_uri": {
          "description": "ClientURI is an URL string of a web page providing information about the client.\nIf present, the server SHOULD display this URL to the end-user in\na clickable fashion.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "contacts": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "created_at": {
          "description": "CreatedAt returns the timestamp of the client's creation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "frontchannel_logout_session_required": {
          "description": "Boolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be\nincluded to identify the RP session with the OP when the frontchannel_logout_uri is used.\nIf omitted, the default value is false.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "frontchannel_logout_uri": {
          "description": "RP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query\nparameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the\nrequest and to determine which of the potentially multiple sessions is to be logged out; if either is\nincluded, both MUST be.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "grant_types": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2GrantType",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "implicit_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "implicit_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "jwks": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JoseJSONWebKeySet",
              "type": "named"
            }
          }
        },
        "jwks_uri": {
          "description": "URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains\nthe signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the\nClient's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing\nand encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced\nJWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both\nsignatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used\nto provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST\nmatch those in the certificate.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "jwt_bearer_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "logo_uri": {
          "description": "LogoURI is an URL string that references a logo for the client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSONRawMessage",
              "type": "named"
            }
          }
        },
        "owner": {
          "description": "Owner is a string identifying the owner of the OAuth 2.0 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "password_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "policy_uri": {
          "description": "PolicyURI is a URL string that points to a human-readable privacy policy document\nthat describes how the deployment organization collects, uses,\nretains, and discloses personal data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "post_logout_redirect_uris": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "redirect_uris": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "refresh_token_grant_access_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_id_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token_grant_refresh_token_lifespan": {
          "description": "TODO delete this type and replace it with ory/x/sqlxx/NullDuration when applying the custom client token TTL patch to Hydra 2.x",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "registration_access_token": {
          "description": "RegistrationAccessToken can be used to update, get, or delete the OAuth2 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "registration_client_uri": {
          "description": "RegistrationClientURI is the URL used to update, get, or delete the OAuth2 Client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "request_object_signing_alg": {
          "description": "JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects\nfrom this Client MUST be rejected, if not signed with this algorithm.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            }
          }
        },
        "request_uris": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "response_types": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2ResponseType",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "scope": {
          "description": "Scope is a string containing a space-separated list of scope values (as\ndescribed in Section 3.3 of OAuth 2.0 [RFC6749]) that the client\ncan use when requesting access tokens.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2Scope",
              "type": "named"
            }
          }
        },
        "sector_identifier_uri": {
          "description": "URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a\nfile with a single JSON array of redirect_uri values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "subject_type": {
          "description": "SubjectType requested for responses to this Client. The subject_types_supported Discovery parameter contains a\nlist of the supported subject_type values for this server. Valid types include `pairwise` and `public`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OpenIDConnectSubjectType",
              "type": "named"
            }
          }
        },
        "token_endpoint_auth_method": {
          "description": "Requested Client Authentication method for the Token Endpoint. The options are client_secret_post,\nclient_secret_basic, private_key_jwt, and none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TokenEndpointAuthMethod",
              "type": "named"
            }
          }
        },
        "token_endpoint_auth_signing_alg": {
          "description": "Requested Client Authentication signing algorithm for the Token Endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            }
          }
        },
        "tos_uri": {
          "description": "TermsOfServiceURI is a URL string that points to a human-readable terms of service\ndocument for the client that describes a contractual relationship\nbetween the end-user and the client that the end-user accepts when\nauthorizing the client.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "updated_at": {
          "description": "UpdatedAt returns the timestamp of the last update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          }
        },
        "userinfo_signed_response_alg": {
          "description": "JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT\n[JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims\nas a UTF-8 encoded JSON object using the application/json content-type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            }
          }
        }
      }
    },
    "Oauth2TokenBody": {
      "fields": {
        "client_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_secret": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "code": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "grant_type": {
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "redirect_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "scope": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "Oauth2TokenResponse": {
      "description": "The Access Token Response",
      "fields": {
        "access_token": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "expires_in": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          }
        },
        "id_token": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "refresh_token": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "scope": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "token_type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        }
      }
    },
    "RevokeOAuth2TokenBody": {
      "fields": {
        "client_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "client_secret": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "token": {
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      }
    },
    "WellKnown": {
      "description": "It includes links to several endpoints (e.g. /oauth2/token) and exposes information on supported signature algorithms\namong others.",
      "fields": {
        "authorization_endpoint": {
          "description": "URL of the OP's OAuth 2.0 Authorization Endpoint.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "backchannel_logout_session_supported": {
          "description": "Boolean value specifying whether the OP can pass a sid (session ID) Claim in the Logout Token to identify the RP\nsession with the OP. If supported, the sid Claim is also included in ID Tokens issued by the OP",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "backchannel_logout_supported": {
          "description": "Boolean value specifying whether the OP supports back-channel logout, with true indicating support.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "claims_parameter_supported": {
          "description": "Boolean value specifying whether the OP supports use of the claims parameter, with true indicating support.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "claims_supported": {
          "description": "JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply\nvalues for. Note that for privacy or other reasons, this might not be an exhaustive list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "code_challenge_methods_supported": {
          "description": "JSON array containing a list of Proof Key for Code Exchange (PKCE) [RFC7636] code challenge methods supported\nby this authorization server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2CodeChallenge",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "end_session_endpoint": {
          "description": "URL at the OP to which an RP can perform a redirect to request that the End-User be logged out at the OP.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "frontchannel_logout_session_supported": {
          "description": "Boolean value specifying whether the OP can pass iss (issuer) and sid (session ID) query parameters to identify\nthe RP session with the OP when the frontchannel_logout_uri is used. If supported, the sid Claim is also\nincluded in ID Tokens issued by the OP.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "frontchannel_logout_supported": {
          "description": "Boolean value specifying whether the OP supports HTTP-based logout, with true indicating support.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "grant_types_supported": {
          "description": "JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2GrantType",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "id_token_signing_alg_values_supported": {
          "description": "JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token\nto encode the Claims in a JWT.",
          "type": {
            "element_type": {
              "name": "OAuth2SigningAlgorithm",
              "type": "named"
            },
            "type": "array"
          }
        },
        "issuer": {
          "description": "URL using the https scheme with no query or fragment component that the OP asserts as its IssuerURL Identifier.\nIf IssuerURL discovery is supported , this value MUST be identical to the issuer value returned\nby WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this IssuerURL.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "jwks_uri": {
          "description": "URL of the OP's JSON Web Key Set [JWK] document. This contains the signing key(s) the RP uses to validate\nsignatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs\nto encrypt requests to the Server. When both signing and encryption keys are made available, a use (Key Use)\nparameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage.\nAlthough some algorithms allow the same key to be used for both signatures and encryption, doing so is\nNOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of\nkeys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "registration_endpoint": {
          "description": "URL of the OP's Dynamic Client Registration Endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "request_object_signing_alg_values_supported": {
          "description": "JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects,\nwhich are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core]. These algorithms are used both when\nthe Request Object is passed by value (using the request parameter) and when it is passed by reference\n(using the request_uri parameter).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2SigningAlgorithm",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "request_parameter_supported": {
          "description": "Boolean value specifying whether the OP supports use of the request parameter, with true indicating support.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "request_uri_parameter_supported": {
          "description": "Boolean value specifying whether the OP supports use of the request_uri parameter, with true indicating support.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "require_request_uri_registration": {
          "description": "Boolean value specifying whether the OP requires any request_uri values used to be pre-registered\nusing the request_uris registration parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          }
        },
        "response_modes_supported": {
          "description": "JSON array containing a list of the OAuth 2.0 response_mode values that this OP supports.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "response_types_supported": {
          "description": "JSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID\nProviders MUST support the code, id_token, and the token id_token Response Type values.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          }
        },
        "revocation_endpoint": {
          "description": "URL of the authorization server's OAuth 2.0 revocation endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "scopes_supported": {
          "description": "SON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST\nsupport the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2Scope",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "subject_types_supported": {
          "description": "JSON array containing a list of the Subject Identifier types that this OP supports. Valid types include\npairwise and public.",
          "type": {
            "element_type": {
              "name": "OpenIDConnectSubjectType",
              "type": "named"
            },
            "type": "array"
          }
        },
        "token_endpoint": {
          "description": "URL of the OP's OAuth 2.0 Token Endpoint",
          "type": {
            "name": "String",
            "type": "named"
          }
        },
        "token_endpoint_auth_methods_supported": {
          "description": "JSON array containing a list of Client Authentication methods supported by this Token Endpoint. The options are\nclient_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 9 of OpenID Connect Core 1.0",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TokenEndpointAuthMethod",
                "type": "named"
              },
              "type": "array"
            }
          }
        },
        "userinfo_endpoint": {
          "description": "URL of the OP's UserInfo Endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          }
        },
        "userinfo_signing_alg_values_supported": {
          "description": "JSON array containing a list of the JWS [JWS] signing algorithms (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims in a JWT [JWT].",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OAuth2SigningAlgorithm",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      }
    }
  },
  "procedures": [
    {
      "request": {
        "url": "/oauth2/register",
        "method": "post",
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "OAuth2Client"
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "name": "OAuth2Client",
            "type": "named"
          }
        }
      },
      "description": "Register an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol",
      "name": "dynamicClientRegistrationCreateOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/register/{id}",
        "method": "put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ],
        "requestBody": {
          "contentType": "application/json",
          "schema": {
            "type": "OAuth2Client"
          }
        }
      },
      "arguments": {
        "body": {
          "type": {
            "name": "OAuth2Client",
            "type": "named"
          }
        },
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Update an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol",
      "name": "dynamicClientRegistrationUpdateOAuth2Client",
      "result_type": {
        "name": "OAuth2Client",
        "type": "named"
      }
    },
    {
      "request": {
        "url": "/oauth2/register/{id}",
        "method": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "String"
            }
          }
        ]
      },
      "arguments": {
        "id": {
          "description": "The id of the OAuth 2.0 Client.",
          "type": {
            "name": "String",
            "type": "named"
          }
        }
      },
      "description": "Deletes an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol",
      "name": "dynamicClientRegistrationDeleteOAuth2Client",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/revoke",
        "method": "post",
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded",
          "schema": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "String",
                "nullable": true
              },
              "client_secret": {
                "type": "String",
                "nullable": true
              },
              "token": {
                "type": "String"
              }
            }
          }
        }
      },
      "arguments": {
        "body": {
          "description": "Form data of /oauth2/revoke",
          "type": {
            "name": "RevokeOAuth2TokenBody",
            "type": "named"
          }
        }
      },
      "description": "Revoke OAuth2 Tokens",
      "name": "revokeOAuth2Token",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    {
      "request": {
        "url": "/oauth2/token",
        "method": "post",
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded",
          "schema": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "String",
                "nullable": true
              },
              "client_secret": {
                "type": "String",
                "nullable": true
              },
              "code": {
                "type": "String",
                "nullable": true
              },
              "grant_type": {
                "type": "String"
              },
              "redirect_uri": {
                "type": "String",
                "nullable": true
              },
              "refresh_token": {
                "type": "String",
                "nullable": true
              },
              "scope": {
                "type": "String",
                "nullable": true
              }
            }
          }
        }
      },
      "arguments": {
        "body": {
          "description": "Form data of /oauth2/token",
          "type": {
            "name": "Oauth2TokenBody",
            "type": "named"
          }
        }
      },
      "description": "The OAuth 2.0 Token Endpoint",
      "name": "oauth2Token",
      "result_type": {
        "name": "Oauth2TokenResponse",
        "type": "named"
      }
    }
  ],
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int64"
      }
    },
    "JSONRawMessage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "JoseJSONWebKeySet": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "OAuth2CodeChallenge": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "plain",
          "S256"
        ],
        "type": "enum"
      }
    },
    "OAuth2GrantType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "authorization_code",
          "implicit",
          "client_credentials",
          "refresh_token"
        ],
        "type": "enum"
      }
    },
    "OAuth2ResponseType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "code",
          "token",
          "id_token"
        ],
        "type": "enum"
      }
    },
    "OAuth2Scope": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "offline_access",
          "offline",
          "openid"
        ],
        "type": "enum"
      }
    },
    "OAuth2SigningAlgorithm": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "RS256"
        ],
        "type": "enum"
      }
    },
    "OpenIDConnectSubjectType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "public",
          "pairwise"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TokenEndpointAuthMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "client_secret_post",
          "client_secret_basic",
          "client_secret_jwt",
          "private_key_jwt",
          "none"
        ],
        "type": "enum"
      }
    }
  }
}
